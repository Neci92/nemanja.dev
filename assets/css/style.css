@import url(https://fonts.googleapis.com/css2?family=Montserrat:wght@500;600&family=Racing+Sans+One&display=swap);a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline}:focus{outline:0}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:'';content:none}table{border-collapse:collapse;border-spacing:0}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration,input[type=search]::-webkit-search-results-button,input[type=search]::-webkit-search-results-decoration{-webkit-appearance:none;-moz-appearance:none}input[type=search]{-webkit-appearance:none;-moz-appearance:none;box-sizing:content-box}textarea{overflow:auto;vertical-align:top;resize:vertical}audio,canvas,video{display:inline-block;max-width:100%}audio:not([controls]){display:none;height:0}[hidden]{display:none}html{font-size:100%;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%}a:focus{outline:thin dotted}a:active,a:hover{outline:0}img{border:0;-ms-interpolation-mode:bicubic}figure{margin:0}form{margin:0}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0;white-space:normal}button,input,select,textarea{font-size:100%;margin:0;vertical-align:baseline}button,input{line-height:normal}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=search]{-webkit-appearance:textfield;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}textarea{overflow:auto;vertical-align:top}table{border-collapse:collapse;border-spacing:0}button,html,input,select,textarea{color:#222}::-moz-selection{background:#b3d4fc;text-shadow:none}::selection{background:#b3d4fc;text-shadow:none}img{vertical-align:middle}fieldset{border:0;margin:0;padding:0}textarea{resize:vertical}.chromeframe{margin:.2em 0;background:#ccc;color:#000;padding:.2em 0}html{font-size:10px}body{background-color:#171819;color:#ccc;font-family:Montserrat,sans-serif;font-size:1.8rem;line-height:1.4}img{width:100%}::-moz-selection{color:#fff;background:#e85d54;-webkit-text-fill-color:initial;-webkit-background-clip:initial}::-moz-selection,::selection{color:#fff;background:#e85d54;-webkit-text-fill-color:initial;-webkit-background-clip:initial}a{text-decoration:none}a:focus{outline:1px dotted #e85d54}.h1{font-weight:600;font-size:40px;color:linear-gradient(90.86deg,#e85d54 0,#da3f5b 99.85%);line-height:1.2;background:linear-gradient(90.86deg,#e85d54 0,#da3f5b 99.85%);-webkit-text-fill-color:transparent;-webkit-background-clip:text}@media (max-width:900px){.h1{font-size:30px}}.h2{font-size:36px;font-weight:600;background:linear-gradient(90.86deg,#e85d54 0,#da3f5b 99.85%);-webkit-text-fill-color:transparent;-webkit-background-clip:text}@media (max-width:900px){.h2{font-size:26px}}.h3{font-size:30px;font-weight:600;background:linear-gradient(90.86deg,#e85d54 0,#da3f5b 99.85%);-webkit-text-fill-color:transparent;-webkit-background-clip:text}@media (max-width:900px){.h3{font-size:20px}}.date{font-size:16px;letter-spacing:.025em;color:rgba(204,204,204,.5)}@media (max-width:900px){.date{font-size:13px}}.container{max-width:130rem;margin:0 auto;padding:0 5rem}@media (max-width:600px){.container{padding:0 2rem}}.container--narrow{max-width:100rem}.noscroll{overflow:hidden}.navigation__list{display:flex}.navigation__list-item{margin-left:20px}.navigation__list-item:hover .navigation__link-text{top:50%}.navigation__link-text{font-family:'Racing Sans One',cursive;letter-spacing:.035rem;padding:0 1rem;transition:.3s;position:absolute;top:-50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);font-size:4rem;color:#da3f5b}.navigation__link-text--footer{top:150%}.header__container{position:relative;display:flex;justify-content:space-between;padding:2rem 5rem;box-shadow:3px 3px 4px rgba(0,0,0,.212),-3px -3px 4px rgba(102,107,112,.123);border-radius:0 0 35px 35px}@media (max-width:900px){.header__container{padding:2rem}}.header__logo:hover .header__logo-text-wrapper{top:50%}.header__logo-text-wrapper{transition:.3s;position:absolute;top:-50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.header__logo-text{font-family:"Racing Sans One",cursive;letter-spacing:.035rem;padding:0 1rem;transition:.3s;position:absolute;top:-50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);font-size:4rem;display:block;color:#da3f5b}.footer{margin-top:5rem}@media (max-width:900px){.footer{margin-top:2rem}}.footer__wrapper{position:relative;overflow:hidden;display:flex;justify-content:space-between;padding:2rem 5rem;box-shadow:3px 3px 4px rgba(0,0,0,.212),-3px -3px 4px rgba(102,107,112,.123);border-radius:35px;border-bottom-left-radius:0;border-bottom-right-radius:0}@media (max-width:900px){.footer__wrapper{padding:2rem 2rem}}.footer__message{flex:0 0 100%;text-align:center}.button{display:inline-block}.button--icon{padding:5px;border-radius:50%;box-shadow:3px 3px 4px rgba(0,0,0,.212),-3px -3px 4px rgba(102,107,112,.123);display:block}.button--primary{padding:1rem 5rem;color:inherit;position:relative;overflow:hidden;box-shadow:3px 3px 4px rgba(0,0,0,.212),-3px -3px 4px rgba(102,107,112,.123);border-radius:35px}.button--primary:after{content:'';position:absolute;width:100%;height:100%;top:0;left:0;background-image:url(../images/read-more.svg),linear-gradient(90.86deg,#e85d54 0,#da3f5b 99.85%);background-position:center;background-repeat:no-repeat;background-size:contain;z-index:-1;z-index:2;transition:.2s;opacity:0}.button--primary:hover:after{opacity:1;z-index:2}.intro{margin-top:5rem}@media (max-width:900px){.intro{margin-top:2rem}}.intro__wrapper{display:flex;padding:5rem;box-shadow:3px 3px 4px rgba(0,0,0,.212),-3px -3px 4px rgba(102,107,112,.123);border-radius:35px}@media (max-width:900px){.intro__wrapper{flex-direction:column-reverse;padding:2rem}}.intro__image{flex:0 0 25%;margin-left:5rem;border-radius:35px;align-self:flex-start;overflow:hidden;box-shadow:3px 3px 4px rgba(0,0,0,.212),-3px -3px 4px rgba(102,107,112,.123);border:.2rem solid #171819}@media (max-width:900px){.intro__image{margin-left:0;margin-bottom:3rem;max-width:22rem}}.intro__button{margin-top:3rem}.intro__button:after{background-image:url("../images/Mail icon.svg"),linear-gradient(90.86deg,#e85d54 0,#da3f5b 99.85%)}.intro__header{margin-bottom:3.5rem}.intro__text{max-width:70rem}.latest-articles{margin-top:5rem}@media (max-width:900px){.latest-articles{margin-top:2rem}}.latest-articles__wrapper{padding:5rem;box-shadow:3px 3px 4px rgba(0,0,0,.212),-3px -3px 4px rgba(102,107,112,.123);border-radius:35px}@media (max-width:900px){.latest-articles__wrapper{padding:2rem}}.latest-articles__title{margin-bottom:5rem}@media (max-width:900px){.latest-articles__title{margin-bottom:2rem}}.latest-articles__link{color:#fff;text-decoration:underline;display:block;margin-top:3rem;transition:.2s}.latest-articles__link:hover{color:#da3f5b}.all-articles{margin-top:5rem}.all-articles__wrapper{padding:5rem;box-shadow:3px 3px 4px rgba(0,0,0,.212),-3px -3px 4px rgba(102,107,112,.123);border-radius:35px}@media (max-width:900px){.all-articles__wrapper{padding:2rem}}.all-articles__pagination{display:flex;justify-content:center;margin-top:3rem;color:#fff}.all-articles__pagination>*+*{margin-left:1rem}.all-articles__pagination>a{color:inherit}.all-articles__pagination>a:hover{color:#da3f5b}.all-articles__pagination>span{opacity:.7}.article-card{padding:5rem;padding-right:15rem;position:relative;box-shadow:3px 3px 4px rgba(0,0,0,.212),-3px -3px 4px rgba(102,107,112,.123);border-radius:35px}@media (max-width:900px){.article-card{padding:2rem}}.article-card:not(:last-child){margin-bottom:5rem}@media (max-width:900px){.article-card:not(:last-child){margin-bottom:2rem}}.article-card__image{position:absolute;width:auto;top:50%;right:0;-webkit-transform:translateY(-50%);transform:translateY(-50%);z-index:-1}.article-card__image:after{content:'';display:block;position:absolute;z-index:2;top:0;left:0;width:100%;height:100%;background:radial-gradient(44.09% 44.09% at 50% 50%,rgba(23,24,25,.65) 0,#171819 100%)}.article-card__button{margin-top:3rem}.article-card__date{margin-bottom:3rem;display:inline-block}.blog-post{min-height:calc(100vh - 9.3rem - 5rem - 9.3rem - 3rem);margin-top:5rem;margin-bottom:5rem}.blog-post__wrapper{padding:5rem;box-shadow:3px 3px 4px rgba(0,0,0,.212),-3px -3px 4px rgba(102,107,112,.123);border-radius:35px}@media (max-width:900px){.blog-post__wrapper{padding:2rem}}.blog-post__title{margin-bottom:5rem}@media (max-width:900px){.blog-post__title{margin-bottom:2rem}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
